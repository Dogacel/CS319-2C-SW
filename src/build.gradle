/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.2/userguide/tutorial_java_projects.html
 */
plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

javafx {
    version = "13"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.media' ]
}

task(runServerCLI, dependsOn: 'classes', type: JavaExec) {
    main = 'SevenWonders.Network.ConsoleApplication.ServerApplication'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}

task(runClientCLI, dependsOn: 'classes', type: JavaExec) {
    main = 'SevenWonders.Network.ConsoleApplication.ClientApplication'
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'
    implementation 'com.google.code.gson:gson:2.8.6'
    compile "org.openjfx:javafx-base:13:linux"
    compile "org.openjfx:javafx-graphics:13:linux"
    compile "org.openjfx:javafx-controls:13:linux"
    compile "org.openjfx:javafx-fxml:13:linux"
    compile "org.openjfx:javafx-media:13:linux"

    implementation files('libs/WaifUPnP.jar')

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    compile group: 'com.google.guava', name: 'guava', version: '28.0-jre'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
}

test {
    useJUnitPlatform()
}

mainClassName = 'SevenWonders.Main'

jar {
    manifest {
        attributes 'Main-Class': 'SevenWonders.Main'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

